//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemNekretnine.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ProdajaNekretninaEntities : DbContext
    {
        public ProdajaNekretninaEntities()
            : base("name=ProdajaNekretninaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<IzlazStavke> IzlazStavke { get; set; }
        public DbSet<Kategorije> Kategorije { get; set; }
        public DbSet<Korisnici> Korisnici { get; set; }
        public DbSet<KorisniciUloge> KorisniciUloge { get; set; }
        public DbSet<Kupci> Kupci { get; set; }
        public DbSet<NarudzbaStavke> NarudzbaStavke { get; set; }
        public DbSet<Narudzbe> Narudzbe { get; set; }
        public DbSet<Ocjene> Ocjene { get; set; }
        public DbSet<SlikeNekretnina> SlikeNekretnina { get; set; }
        public DbSet<Sobe> Sobe { get; set; }
        public DbSet<Spratovi> Spratovi { get; set; }
        public DbSet<StanjaNekretnina> StanjaNekretnina { get; set; }
        public DbSet<TipGrijanja> TipGrijanja { get; set; }
        public DbSet<Uloge> Uloge { get; set; }
        public DbSet<VrsteProdaje> VrsteProdaje { get; set; }
        public DbSet<Gradovi> Gradovi { get; set; }
        public DbSet<Kantoni> Kantoni { get; set; }
        public DbSet<Nekretnine> Nekretnine { get; set; }
        public DbSet<Izlazi> Izlazi { get; set; }
        public DbSet<Potraznja> Potraznja { get; set; }
        public DbSet<JavnaPitanja> JavnaPitanja { get; set; }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual ObjectResult<KorisniciUloge> esp_KorisniciUloge_SelectByKorisnik(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KorisniciUloge>("esp_KorisniciUloge_SelectByKorisnik", korisnikIDParameter);
        }
    
        public virtual ObjectResult<KorisniciUloge> esp_KorisniciUloge_SelectByKorisnik(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KorisniciUloge>("esp_KorisniciUloge_SelectByKorisnik", mergeOption, korisnikIDParameter);
        }
    
        public virtual int esp_KorisniciUloge_Insert(Nullable<int> korisnikID, Nullable<int> ulogaID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Insert", korisnikIDParameter, ulogaIDParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectAll");
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectAll", mergeOption);
        }
    
        public virtual ObjectResult<esp_Korisnici_SelectByName_Result> esp_Korisnici_SelectByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Korisnici_SelectByName_Result>("esp_Korisnici_SelectByName", nameParameter);
        }
    
        public virtual int esp_Korisnici_UpdateStatus(Nullable<int> korisnikID, Nullable<bool> status)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_UpdateStatus", korisnikIDParameter, statusParameter);
        }
    
        public virtual int esp_Korisnici_Update(Nullable<int> korisnikID, string ime, string prezime, string email, string telefon)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_Update", korisnikIDParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter);
        }
    
        public virtual int esp_Korisnici_ResetPass(Nullable<int> korisnikID, string lozinkaSalt, string lozinkaHash)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_ResetPass", korisnikIDParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_KorisniciUlogeTEMP_SelectByKorisnik(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_KorisniciUlogeTEMP_SelectByKorisnik", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_KorisniciUlogeTEMP_SelectByKorisnik(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_KorisniciUlogeTEMP_SelectByKorisnik", mergeOption, korisnikIDParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_PretragaAdmin_Result> esp_Nekretnine_PretragaAdmin(Nullable<int> kategorijaID, Nullable<int> vrstaID, Nullable<bool> aktivna)
        {
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("KategorijaID", kategorijaID) :
                new ObjectParameter("KategorijaID", typeof(int));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var aktivnaParameter = aktivna.HasValue ?
                new ObjectParameter("Aktivna", aktivna) :
                new ObjectParameter("Aktivna", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_PretragaAdmin_Result>("esp_Nekretnine_PretragaAdmin", kategorijaIDParameter, vrstaIDParameter, aktivnaParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByEmail", emailParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByEmail(string email, MergeOption mergeOption)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByEmail", mergeOption, emailParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectZadnjeDodane_Result> esp_Nekretnine_SelectZadnjeDodane()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectZadnjeDodane_Result>("esp_Nekretnine_SelectZadnjeDodane");
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectProdaja_Result> esp_Nekretnine_SelectProdaja(Nullable<int> kategorijaID, Nullable<int> kantonID, Nullable<int> gradID, Nullable<int> stanjeID, Nullable<double> cijenaOD, Nullable<double> cijenaDO)
        {
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("kategorijaID", kategorijaID) :
                new ObjectParameter("kategorijaID", typeof(int));
    
            var kantonIDParameter = kantonID.HasValue ?
                new ObjectParameter("kantonID", kantonID) :
                new ObjectParameter("kantonID", typeof(int));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("gradID", gradID) :
                new ObjectParameter("gradID", typeof(int));
    
            var stanjeIDParameter = stanjeID.HasValue ?
                new ObjectParameter("stanjeID", stanjeID) :
                new ObjectParameter("stanjeID", typeof(int));
    
            var cijenaODParameter = cijenaOD.HasValue ?
                new ObjectParameter("cijenaOD", cijenaOD) :
                new ObjectParameter("cijenaOD", typeof(double));
    
            var cijenaDOParameter = cijenaDO.HasValue ?
                new ObjectParameter("cijenaDO", cijenaDO) :
                new ObjectParameter("cijenaDO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectProdaja_Result>("esp_Nekretnine_SelectProdaja", kategorijaIDParameter, kantonIDParameter, gradIDParameter, stanjeIDParameter, cijenaODParameter, cijenaDOParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectPotraznja_Result> esp_Nekretnine_SelectPotraznja(Nullable<int> kategorijaID, Nullable<int> kantonID, Nullable<int> gradID, Nullable<int> stanjeID, Nullable<double> cijenaOD, Nullable<double> cijenaDO)
        {
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("kategorijaID", kategorijaID) :
                new ObjectParameter("kategorijaID", typeof(int));
    
            var kantonIDParameter = kantonID.HasValue ?
                new ObjectParameter("kantonID", kantonID) :
                new ObjectParameter("kantonID", typeof(int));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("gradID", gradID) :
                new ObjectParameter("gradID", typeof(int));
    
            var stanjeIDParameter = stanjeID.HasValue ?
                new ObjectParameter("stanjeID", stanjeID) :
                new ObjectParameter("stanjeID", typeof(int));
    
            var cijenaODParameter = cijenaOD.HasValue ?
                new ObjectParameter("cijenaOD", cijenaOD) :
                new ObjectParameter("cijenaOD", typeof(double));
    
            var cijenaDOParameter = cijenaDO.HasValue ?
                new ObjectParameter("cijenaDO", cijenaDO) :
                new ObjectParameter("cijenaDO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectPotraznja_Result>("esp_Nekretnine_SelectPotraznja", kategorijaIDParameter, kantonIDParameter, gradIDParameter, stanjeIDParameter, cijenaODParameter, cijenaDOParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectZadnjeDodaneProdaja_Result> esp_Nekretnine_SelectZadnjeDodaneProdaja()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectZadnjeDodaneProdaja_Result>("esp_Nekretnine_SelectZadnjeDodaneProdaja");
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectZadnjeDodaneIznajmljivanje_Result> esp_Nekretnine_SelectZadnjeDodaneIznajmljivanje()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectZadnjeDodaneIznajmljivanje_Result>("esp_Nekretnine_SelectZadnjeDodaneIznajmljivanje");
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectIznajmljivanje_Result> esp_Nekretnine_SelectIznajmljivanje(Nullable<int> kategorijaID, Nullable<int> kantonID, Nullable<int> gradID, Nullable<int> stanjeID, Nullable<double> cijenaOD, Nullable<double> cijenaDO)
        {
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("kategorijaID", kategorijaID) :
                new ObjectParameter("kategorijaID", typeof(int));
    
            var kantonIDParameter = kantonID.HasValue ?
                new ObjectParameter("kantonID", kantonID) :
                new ObjectParameter("kantonID", typeof(int));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("gradID", gradID) :
                new ObjectParameter("gradID", typeof(int));
    
            var stanjeIDParameter = stanjeID.HasValue ?
                new ObjectParameter("stanjeID", stanjeID) :
                new ObjectParameter("stanjeID", typeof(int));
    
            var cijenaODParameter = cijenaOD.HasValue ?
                new ObjectParameter("cijenaOD", cijenaOD) :
                new ObjectParameter("cijenaOD", typeof(double));
    
            var cijenaDOParameter = cijenaDO.HasValue ?
                new ObjectParameter("cijenaDO", cijenaDO) :
                new ObjectParameter("cijenaDO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectIznajmljivanje_Result>("esp_Nekretnine_SelectIznajmljivanje", kategorijaIDParameter, kantonIDParameter, gradIDParameter, stanjeIDParameter, cijenaODParameter, cijenaDOParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_Narudzbe_Insert(string brojNarudzbe, Nullable<int> kupacID)
        {
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_Narudzbe_Insert", brojNarudzbeParameter, kupacIDParameter);
        }
    
        public virtual int esp_NarudzbaStavke_Insert(Nullable<int> narudzbaID, Nullable<int> proizvodID, Nullable<int> kolicina)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_NarudzbaStavke_Insert", narudzbaIDParameter, proizvodIDParameter, kolicinaParameter);
        }
    
        public virtual ObjectResult<Ocjene> esp_Ocjene_Provjeri(Nullable<int> kupacID, Nullable<int> nekretninaID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var nekretninaIDParameter = nekretninaID.HasValue ?
                new ObjectParameter("NekretninaID", nekretninaID) :
                new ObjectParameter("NekretninaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ocjene>("esp_Ocjene_Provjeri", kupacIDParameter, nekretninaIDParameter);
        }
    
        public virtual ObjectResult<Ocjene> esp_Ocjene_Provjeri(Nullable<int> kupacID, Nullable<int> nekretninaID, MergeOption mergeOption)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var nekretninaIDParameter = nekretninaID.HasValue ?
                new ObjectParameter("NekretninaID", nekretninaID) :
                new ObjectParameter("NekretninaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ocjene>("esp_Ocjene_Provjeri", mergeOption, kupacIDParameter, nekretninaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Nekretnine_Insert(Nullable<int> vrstaid, Nullable<int> kategorijaID, Nullable<int> kantonID, Nullable<int> sobID, Nullable<int> spratID, Nullable<int> grijanjeID, Nullable<int> stanjeID, Nullable<int> korisnikID, string naslov, Nullable<int> brojKvadrata, string adresa, Nullable<double> cijena, Nullable<int> godinaIzgradnje, Nullable<bool> voda, Nullable<bool> struja, Nullable<bool> kanalizacija, Nullable<bool> uknjizeno, Nullable<bool> parking, Nullable<bool> lift, Nullable<bool> namjesten, Nullable<bool> internet, Nullable<bool> novogradnja, Nullable<bool> adaptiran, Nullable<bool> garaza, Nullable<bool> telefon, byte[] slika)
        {
            var vrstaidParameter = vrstaid.HasValue ?
                new ObjectParameter("vrstaid", vrstaid) :
                new ObjectParameter("vrstaid", typeof(int));
    
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("kategorijaID", kategorijaID) :
                new ObjectParameter("kategorijaID", typeof(int));
    
            var kantonIDParameter = kantonID.HasValue ?
                new ObjectParameter("kantonID", kantonID) :
                new ObjectParameter("kantonID", typeof(int));
    
            var sobIDParameter = sobID.HasValue ?
                new ObjectParameter("sobID", sobID) :
                new ObjectParameter("sobID", typeof(int));
    
            var spratIDParameter = spratID.HasValue ?
                new ObjectParameter("spratID", spratID) :
                new ObjectParameter("spratID", typeof(int));
    
            var grijanjeIDParameter = grijanjeID.HasValue ?
                new ObjectParameter("grijanjeID", grijanjeID) :
                new ObjectParameter("grijanjeID", typeof(int));
    
            var stanjeIDParameter = stanjeID.HasValue ?
                new ObjectParameter("stanjeID", stanjeID) :
                new ObjectParameter("stanjeID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("korisnikID", korisnikID) :
                new ObjectParameter("korisnikID", typeof(int));
    
            var naslovParameter = naslov != null ?
                new ObjectParameter("Naslov", naslov) :
                new ObjectParameter("Naslov", typeof(string));
    
            var brojKvadrataParameter = brojKvadrata.HasValue ?
                new ObjectParameter("brojKvadrata", brojKvadrata) :
                new ObjectParameter("brojKvadrata", typeof(int));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("cijena", cijena) :
                new ObjectParameter("cijena", typeof(double));
    
            var godinaIzgradnjeParameter = godinaIzgradnje.HasValue ?
                new ObjectParameter("godinaIzgradnje", godinaIzgradnje) :
                new ObjectParameter("godinaIzgradnje", typeof(int));
    
            var vodaParameter = voda.HasValue ?
                new ObjectParameter("voda", voda) :
                new ObjectParameter("voda", typeof(bool));
    
            var strujaParameter = struja.HasValue ?
                new ObjectParameter("struja", struja) :
                new ObjectParameter("struja", typeof(bool));
    
            var kanalizacijaParameter = kanalizacija.HasValue ?
                new ObjectParameter("kanalizacija", kanalizacija) :
                new ObjectParameter("kanalizacija", typeof(bool));
    
            var uknjizenoParameter = uknjizeno.HasValue ?
                new ObjectParameter("uknjizeno", uknjizeno) :
                new ObjectParameter("uknjizeno", typeof(bool));
    
            var parkingParameter = parking.HasValue ?
                new ObjectParameter("parking", parking) :
                new ObjectParameter("parking", typeof(bool));
    
            var liftParameter = lift.HasValue ?
                new ObjectParameter("lift", lift) :
                new ObjectParameter("lift", typeof(bool));
    
            var namjestenParameter = namjesten.HasValue ?
                new ObjectParameter("namjesten", namjesten) :
                new ObjectParameter("namjesten", typeof(bool));
    
            var internetParameter = internet.HasValue ?
                new ObjectParameter("internet", internet) :
                new ObjectParameter("internet", typeof(bool));
    
            var novogradnjaParameter = novogradnja.HasValue ?
                new ObjectParameter("novogradnja", novogradnja) :
                new ObjectParameter("novogradnja", typeof(bool));
    
            var adaptiranParameter = adaptiran.HasValue ?
                new ObjectParameter("adaptiran", adaptiran) :
                new ObjectParameter("adaptiran", typeof(bool));
    
            var garazaParameter = garaza.HasValue ?
                new ObjectParameter("garaza", garaza) :
                new ObjectParameter("garaza", typeof(bool));
    
            var telefonParameter = telefon.HasValue ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(bool));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Nekretnine_Insert", vrstaidParameter, kategorijaIDParameter, kantonIDParameter, sobIDParameter, spratIDParameter, grijanjeIDParameter, stanjeIDParameter, korisnikIDParameter, naslovParameter, brojKvadrataParameter, adresaParameter, cijenaParameter, godinaIzgradnjeParameter, vodaParameter, strujaParameter, kanalizacijaParameter, uknjizenoParameter, parkingParameter, liftParameter, namjestenParameter, internetParameter, novogradnjaParameter, adaptiranParameter, garazaParameter, telefonParameter, slikaParameter);
        }
    
        public virtual int esp_Nekretnine_UpdateBrojPosjeta(Nullable<int> brojPojeta, Nullable<int> nekretninaID)
        {
            var brojPojetaParameter = brojPojeta.HasValue ?
                new ObjectParameter("brojPojeta", brojPojeta) :
                new ObjectParameter("brojPojeta", typeof(int));
    
            var nekretninaIDParameter = nekretninaID.HasValue ?
                new ObjectParameter("nekretninaID", nekretninaID) :
                new ObjectParameter("nekretninaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Nekretnine_UpdateBrojPosjeta", brojPojetaParameter, nekretninaIDParameter);
        }
    
        public virtual int esp_Kupci_Update(string email, Nullable<int> kupacid, string salt, string lozinka)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var kupacidParameter = kupacid.HasValue ?
                new ObjectParameter("kupacid", kupacid) :
                new ObjectParameter("kupacid", typeof(int));
    
            var saltParameter = salt != null ?
                new ObjectParameter("salt", salt) :
                new ObjectParameter("salt", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("lozinka", lozinka) :
                new ObjectParameter("lozinka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Kupci_Update", emailParameter, kupacidParameter, saltParameter, lozinkaParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectByKupac_Result> esp_Nekretnine_SelectByKupac(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("kupacID", kupacID) :
                new ObjectParameter("kupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectByKupac_Result>("esp_Nekretnine_SelectByKupac", kupacIDParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_TOP3_Result> esp_Nekretnine_TOP3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_TOP3_Result>("esp_Nekretnine_TOP3");
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Narudzba_Insert(Nullable<int> brojracuna, Nullable<decimal> bezPDV, Nullable<decimal> saPDV, Nullable<int> korisnikID, Nullable<int> narudzbaID)
        {
            var brojracunaParameter = brojracuna.HasValue ?
                new ObjectParameter("brojracuna", brojracuna) :
                new ObjectParameter("brojracuna", typeof(int));
    
            var bezPDVParameter = bezPDV.HasValue ?
                new ObjectParameter("bezPDV", bezPDV) :
                new ObjectParameter("bezPDV", typeof(decimal));
    
            var saPDVParameter = saPDV.HasValue ?
                new ObjectParameter("saPDV", saPDV) :
                new ObjectParameter("saPDV", typeof(decimal));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("korisnikID", korisnikID) :
                new ObjectParameter("korisnikID", typeof(int));
    
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("narudzbaID", narudzbaID) :
                new ObjectParameter("narudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Narudzba_Insert", brojracunaParameter, bezPDVParameter, saPDVParameter, korisnikIDParameter, narudzbaIDParameter);
        }
    
        public virtual int esp_Narudzba_UpdateStatus(Nullable<int> narudzbaID, Nullable<bool> status)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("narudzbaID", narudzbaID) :
                new ObjectParameter("narudzbaID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Narudzba_UpdateStatus", narudzbaIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<esp_Narudzbe_SelectAll_Result> esp_Narudzbe_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Narudzbe_SelectAll_Result>("esp_Narudzbe_SelectAll");
        }
    
        public virtual int esp_PotraznjaInsert(Nullable<int> kID, Nullable<int> grad)
        {
            var kIDParameter = kID.HasValue ?
                new ObjectParameter("KID", kID) :
                new ObjectParameter("KID", typeof(int));
    
            var gradParameter = grad.HasValue ?
                new ObjectParameter("Grad", grad) :
                new ObjectParameter("Grad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PotraznjaInsert", kIDParameter, gradParameter);
        }
    
        public virtual ObjectResult<Nekretnine> esp_PotraznjaSelectAll(Nullable<int> gradID)
        {
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnine>("esp_PotraznjaSelectAll", gradIDParameter);
        }
    
        public virtual ObjectResult<Nekretnine> esp_PotraznjaSelectAll(Nullable<int> gradID, MergeOption mergeOption)
        {
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nekretnine>("esp_PotraznjaSelectAll", mergeOption, gradIDParameter);
        }
    
        public virtual ObjectResult<string> esp_PotraznjaKorisniciEmail(Nullable<int> g)
        {
            var gParameter = g.HasValue ?
                new ObjectParameter("G", g) :
                new ObjectParameter("G", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("esp_PotraznjaKorisniciEmail", gParameter);
        }
    
        public virtual ObjectResult<esp_IzlaziByDatum_Result1> esp_IzlaziByDatum(Nullable<System.DateTime> datumOD, Nullable<System.DateTime> datumDO)
        {
            var datumODParameter = datumOD.HasValue ?
                new ObjectParameter("DatumOD", datumOD) :
                new ObjectParameter("DatumOD", typeof(System.DateTime));
    
            var datumDOParameter = datumDO.HasValue ?
                new ObjectParameter("DatumDO", datumDO) :
                new ObjectParameter("DatumDO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_IzlaziByDatum_Result1>("esp_IzlaziByDatum", datumODParameter, datumDOParameter);
        }
    
        public virtual int esp_Narudzba_Insert_Izlaz_Stavka(Nullable<int> izlazID, Nullable<int> nekretninaID, Nullable<int> kolicina, Nullable<decimal> cijena, Nullable<decimal> popust)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            var nekretninaIDParameter = nekretninaID.HasValue ?
                new ObjectParameter("NekretninaID", nekretninaID) :
                new ObjectParameter("NekretninaID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var popustParameter = popust.HasValue ?
                new ObjectParameter("Popust", popust) :
                new ObjectParameter("Popust", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Narudzba_Insert_Izlaz_Stavka", izlazIDParameter, nekretninaIDParameter, kolicinaParameter, cijenaParameter, popustParameter);
        }
    
        public virtual ObjectResult<esp_Izlazi_Ugovor_Result> esp_Izlazi_Ugovor(Nullable<int> izlazID)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlazi_Ugovor_Result>("esp_Izlazi_Ugovor", izlazIDParameter);
        }
    
        public virtual ObjectResult<esp_Izlazi_Ugovor1_Result> esp_Izlazi_Ugovor1(Nullable<int> izlazID)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlazi_Ugovor1_Result>("esp_Izlazi_Ugovor1", izlazIDParameter);
        }
    
        public virtual int esp_Izlazi_Zakljuci(Nullable<int> izlazID)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Izlazi_Zakljuci", izlazIDParameter);
        }
    
        public virtual ObjectResult<esp_Narudzba_GetByDate_Result1> esp_Narudzba_GetByDate(Nullable<System.DateTime> dat)
        {
            var datParameter = dat.HasValue ?
                new ObjectParameter("dat", dat) :
                new ObjectParameter("dat", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Narudzba_GetByDate_Result1>("esp_Narudzba_GetByDate", datParameter);
        }
    
        public virtual int esp_Pitanja_InsertPitanje(Nullable<int> nekretninaID, string pitanje)
        {
            var nekretninaIDParameter = nekretninaID.HasValue ?
                new ObjectParameter("NekretninaID", nekretninaID) :
                new ObjectParameter("NekretninaID", typeof(int));
    
            var pitanjeParameter = pitanje != null ?
                new ObjectParameter("Pitanje", pitanje) :
                new ObjectParameter("Pitanje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Pitanja_InsertPitanje", nekretninaIDParameter, pitanjeParameter);
        }
    
        public virtual ObjectResult<JavnaPitanja> esp_Pitanja_SelectAll(Nullable<int> nekretninaID)
        {
            var nekretninaIDParameter = nekretninaID.HasValue ?
                new ObjectParameter("NekretninaID", nekretninaID) :
                new ObjectParameter("NekretninaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JavnaPitanja>("esp_Pitanja_SelectAll", nekretninaIDParameter);
        }
    
        public virtual ObjectResult<JavnaPitanja> esp_Pitanja_SelectAll(Nullable<int> nekretninaID, MergeOption mergeOption)
        {
            var nekretninaIDParameter = nekretninaID.HasValue ?
                new ObjectParameter("NekretninaID", nekretninaID) :
                new ObjectParameter("NekretninaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JavnaPitanja>("esp_Pitanja_SelectAll", mergeOption, nekretninaIDParameter);
        }
    
        public virtual int esp_Pitanja_InsertOdgovor(Nullable<int> pitanjeID, string odgovor)
        {
            var pitanjeIDParameter = pitanjeID.HasValue ?
                new ObjectParameter("pitanjeID", pitanjeID) :
                new ObjectParameter("pitanjeID", typeof(int));
    
            var odgovorParameter = odgovor != null ?
                new ObjectParameter("odgovor", odgovor) :
                new ObjectParameter("odgovor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Pitanja_InsertOdgovor", pitanjeIDParameter, odgovorParameter);
        }
    
        public virtual ObjectResult<esp_Pitanja_SelectNeodgovorenaByKorID_Result1> esp_Pitanja_SelectNeodgovorenaByKorID(Nullable<int> korID)
        {
            var korIDParameter = korID.HasValue ?
                new ObjectParameter("KorID", korID) :
                new ObjectParameter("KorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Pitanja_SelectNeodgovorenaByKorID_Result1>("esp_Pitanja_SelectNeodgovorenaByKorID", korIDParameter);
        }
    
        public virtual int esp_DeleteKorisniciUloge(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_DeleteKorisniciUloge", iDParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_All_Result> esp_Nekretnine_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_All_Result>("esp_Nekretnine_All");
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectProdajaNEW_Result> esp_Nekretnine_SelectProdajaNEW(Nullable<int> kategorijaID, Nullable<int> kantonID, Nullable<int> stanjeID, Nullable<double> cijenaOD, Nullable<double> cijenaDO)
        {
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("kategorijaID", kategorijaID) :
                new ObjectParameter("kategorijaID", typeof(int));
    
            var kantonIDParameter = kantonID.HasValue ?
                new ObjectParameter("kantonID", kantonID) :
                new ObjectParameter("kantonID", typeof(int));
    
            var stanjeIDParameter = stanjeID.HasValue ?
                new ObjectParameter("stanjeID", stanjeID) :
                new ObjectParameter("stanjeID", typeof(int));
    
            var cijenaODParameter = cijenaOD.HasValue ?
                new ObjectParameter("cijenaOD", cijenaOD) :
                new ObjectParameter("cijenaOD", typeof(double));
    
            var cijenaDOParameter = cijenaDO.HasValue ?
                new ObjectParameter("cijenaDO", cijenaDO) :
                new ObjectParameter("cijenaDO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectProdajaNEW_Result>("esp_Nekretnine_SelectProdajaNEW", kategorijaIDParameter, kantonIDParameter, stanjeIDParameter, cijenaODParameter, cijenaDOParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectProdajaPage_Result> esp_Nekretnine_SelectProdajaPage(Nullable<int> kategorijaID, Nullable<int> kantonID, Nullable<int> stanjeID, Nullable<double> cijenaOD, Nullable<double> cijenaDO)
        {
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("kategorijaID", kategorijaID) :
                new ObjectParameter("kategorijaID", typeof(int));
    
            var kantonIDParameter = kantonID.HasValue ?
                new ObjectParameter("kantonID", kantonID) :
                new ObjectParameter("kantonID", typeof(int));
    
            var stanjeIDParameter = stanjeID.HasValue ?
                new ObjectParameter("stanjeID", stanjeID) :
                new ObjectParameter("stanjeID", typeof(int));
    
            var cijenaODParameter = cijenaOD.HasValue ?
                new ObjectParameter("cijenaOD", cijenaOD) :
                new ObjectParameter("cijenaOD", typeof(double));
    
            var cijenaDOParameter = cijenaDO.HasValue ?
                new ObjectParameter("cijenaDO", cijenaDO) :
                new ObjectParameter("cijenaDO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectProdajaPage_Result>("esp_Nekretnine_SelectProdajaPage", kategorijaIDParameter, kantonIDParameter, stanjeIDParameter, cijenaODParameter, cijenaDOParameter);
        }
    
        public virtual ObjectResult<esp_Nekretnine_SelectIznajmljivanjePage_Result> esp_Nekretnine_SelectIznajmljivanjePage(Nullable<int> kategorijaID, Nullable<int> kantonID, Nullable<int> stanjeID, Nullable<double> cijenaOD, Nullable<double> cijenaDO)
        {
            var kategorijaIDParameter = kategorijaID.HasValue ?
                new ObjectParameter("kategorijaID", kategorijaID) :
                new ObjectParameter("kategorijaID", typeof(int));
    
            var kantonIDParameter = kantonID.HasValue ?
                new ObjectParameter("kantonID", kantonID) :
                new ObjectParameter("kantonID", typeof(int));
    
            var stanjeIDParameter = stanjeID.HasValue ?
                new ObjectParameter("stanjeID", stanjeID) :
                new ObjectParameter("stanjeID", typeof(int));
    
            var cijenaODParameter = cijenaOD.HasValue ?
                new ObjectParameter("cijenaOD", cijenaOD) :
                new ObjectParameter("cijenaOD", typeof(double));
    
            var cijenaDOParameter = cijenaDO.HasValue ?
                new ObjectParameter("cijenaDO", cijenaDO) :
                new ObjectParameter("cijenaDO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Nekretnine_SelectIznajmljivanjePage_Result>("esp_Nekretnine_SelectIznajmljivanjePage", kategorijaIDParameter, kantonIDParameter, stanjeIDParameter, cijenaODParameter, cijenaDOParameter);
        }
    
        public virtual int esp_Nekretnina_UpdateStatus(Nullable<int> nel)
        {
            var nelParameter = nel.HasValue ?
                new ObjectParameter("nel", nel) :
                new ObjectParameter("nel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Nekretnina_UpdateStatus", nelParameter);
        }
    
        public virtual ObjectResult<esp_Izlazi_SelAll_Result> esp_Izlazi_SelAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlazi_SelAll_Result>("esp_Izlazi_SelAll");
        }
    
        public virtual ObjectResult<Nullable<int>> esp_NekretninaIDByIzlaz(Nullable<int> izId)
        {
            var izIdParameter = izId.HasValue ?
                new ObjectParameter("izId", izId) :
                new ObjectParameter("izId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_NekretninaIDByIzlaz", izIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_IDNEKT(Nullable<int> izId)
        {
            var izIdParameter = izId.HasValue ?
                new ObjectParameter("izId", izId) :
                new ObjectParameter("izId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_IDNEKT", izIdParameter);
        }
    }
}
